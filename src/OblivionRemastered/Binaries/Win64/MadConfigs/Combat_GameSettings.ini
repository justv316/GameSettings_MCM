[Primary Damage Settings]
description=Settings that affect damage calculations.
type=header

[Damage Weapon Mulitplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.50
Description=(Float) Adjusting this value alters all weapon damage proportionately. | This variable has no effect on spell damage. | Example: a value of 1.5 will triple the damage of all weapons, in the game. A sword with 10 damage, will become a 30 damage sword. The altered value will display correctly in the game text.
LoadOnBoot=IfChanged
Step=0.05
VarName=fDamageWeaponMult
type=slider
value=0.50
MinValue=-20
MaxValue=20

[Damage Skill Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.20
Description=(Float) This value is used in the formula that determines the actual damage done by a weapon. This multiplier is used to determine the damage a weapon will do if the actor has a skill of zero. There are other factors that determine the actual damage done, such as strength, fatigue and fDamageSkillMult.
LoadOnBoot=IfChanged
Step=0.05
VarName=fDamageSkillBase
type=slider
value=0.20
MinValue=-20
MaxValue=20

[Damage Skill Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.50
Description=(Float) This value is multiplied times the actor's skill as part of the calculation used to determine how much damage a weapon does in combat. Actors with a skill of 100 would get the full multiplier and actually do more damage than the weapon is rated for by default. Other factors in determining damage done by weapons are strength, fatigue and fDamageSkillBase.
LoadOnBoot=IfChanged
Step=0.05
VarName=fDamageSkillMult
type=slider
value=1.50
MinValue=-20
MaxValue=20

[Damage Strength Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.75
Description=(Float) Used to calculate the damage-multiplier received from attributes. | Formula: fDamageStrengthBase + Attribute/100 x fDamageStrengthMult
LoadOnBoot=IfChanged
Step=0.05
VarName=fDamageStrengthBase
type=slider
value=0.75
MinValue=-20
MaxValue=20

[Damage Strength Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.50
Description=(Float) Used to calculate the damage-multiplier received from attributes. | Formula: fDamageStrengthBase + Attribute/100 x fDamageStrengthMult
LoadOnBoot=IfChanged
Step=0.05
VarName=fDamageStrengthMult
type=slider
value=0.50
MinValue=-20
MaxValue=20

[Weapon Condition Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.50
Description=(Float) Together with fDamageWeaponConditionMult this determines the amount of damage your weapon does based on it's current health. | Example: Setting this value to 1 and fDamageWeaponConditionMult to 0 means that weapons will always deal the same amount of damage, regardless of health, up to the point of breaking.
LoadOnBoot=IfChanged
Step=0.05
VarName=fDamageWeaponConditionBase
type=slider
value=0.50
MinValue=-20
MaxValue=20

[Weapon Condition Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.50
Description=(Float) Together with fDamageWeaponConditionBase this determines the amount of damage your weapon does based on it's current health. | Example: Setting this value to 0 and fDamageWeaponConditionBase to 1 means that weapons will always deal the same amount of damage, regardless of health, up to the point of breaking.
LoadOnBoot=IfChanged
Step=0.05
VarName=fDamageWeaponConditionMult
type=slider
value=0.50
MinValue=-20
MaxValue=20

[Damage to Armor Percentage]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=9.0
Description=(Float) Determines how much damage armor receives when used in combat.
LoadOnBoot=IfChanged
Step=0.1
VarName=fDamageToArmorPercentage
type=slider
value=9.0
MinValue=0
MaxValue=100

[Damage to Weapon Percentage]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.06
Description=(Float) Determines how much damage a weapon receives when used in combat.
LoadOnBoot=IfChanged
Step=0.01
VarName=fDamageToWeaponPercentage
type=slider
value=0.06
MinValue=0
MaxValue=100

[Combat Hit Cone Angle]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=35.0
Description=(Float) Is either the range from an actor's center that an attack can be aimed and count as a successful hit, or the vertical/horizontal range of attacks. Either way, a smaller number causes attacks to have to be aimed more accurately at an actor for them to connect. The confusion comes from the fact that, with a number of around 20 or less, attacks that strike the edge of an actor will pass through them without connecting. The number setting seems to represent degrees. A setting of 45, for example, should allow an actor within a 45 degree arc of the crosshair to be struck by the player's attack.
LoadOnBoot=IfChanged
Step=0.5
VarName=fCombatHitConeAngle
type=slider
value=35.0
MinValue=0
MaxValue=360

[Power Attack Settings]
description=Settings that affect power attacks.
type=header

[Power Attack Delay]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.300
Description=(Float) The amount of time the attack button must be held before a power attack will be executed, and also affects how long a power attack takes. 
Step=0.05
VarName=fPowerAttackDelay
type=slider
value=0.300
MinValue=0
MaxValue=100

[Power Attack Damage Bonus]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=2.50
Description=(Float) For each of the power attack maneuvers, there is a damage multiplier. The damage normally done is multiplied by this game setting before being applied to the target. Damage is always a floating point value, so decimals are not rounded.
Step=0.1
VarName=fDamagePowerAttackBonus
type=slider
value=2.50
MinValue=-100
MaxValue=100

[Power Attack Back Damage Bonus]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=2.50
Description=(Float) For each of the power attack maneuvers, there is a damage multiplier. The damage normally done is multiplied by this game setting before being applied to the target. Damage is always a floating point value, so decimals are not rounded.
Step=0.1
VarName=fDamagePowerAttackBackBonus
type=slider
value=2.50
MinValue=-100
MaxValue=100

[Power Attack Forward Damage Bonus]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=2.50
Description=(Float) For each of the power attack maneuvers, there is a damage multiplier. The damage normally done is multiplied by this game setting before being applied to the target. Damage is always a floating point value, so decimals are not rounded.
Step=0.1
VarName=fDamagePowerAttackForwardBonus
type=slider
value=2.50
MinValue=-100
MaxValue=100

[Power Attack Side Damage Bonus]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=2.50
Description=(Float) For each of the power attack maneuvers, there is a damage multiplier. The damage normally done is multiplied by this game setting before being applied to the target. Damage is always a floating point value, so decimals are not rounded.
Step=0.1
VarName=fDamagePowerAttackSideBonus
type=slider
value=2.50
MinValue=-100
MaxValue=100

[Power Attack Stand Damage Bonus]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=3.00
Description=(Float) For each of the power attack maneuvers, there is a damage multiplier. The damage normally done is multiplied by this game setting before being applied to the target. Damage is always a floating point value, so decimals are not rounded.
Step=0.1
VarName=fDamagePowerAttackStandBonus
type=slider
value=3.00
MinValue=-100
MaxValue=100

[Hand-to-Hand Settings]
description=Settings that affect Hand to Hand combat.
type=header

[HtH Damage Skill Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.00
Description=(Float) Base Hand to Hand skill value | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.05
VarName=fHandDamageSkillBase
type=slider
value=0.00
MinValue=-20
MaxValue=20

[HtH Damage Skill Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.00
Description=(Float) Hand to Hand skill multiplier | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.05
VarName=fHandDamageSkillMult
type=slider
value=1.00
MinValue=-20
MaxValue=20

[HtH Damage Strength Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.00
Description=(Float) Base Strength attribute value | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.05
VarName=fHandDamageStrengthBase
type=slider
value=0.00
MinValue=-20
MaxValue=20

[HtH Damage Strength Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.75
Description=(Float) Strength attribute multiplier | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.05
VarName=fHandDamageStrengthMult
type=slider
value=0.75
MinValue=-20
MaxValue=20

[HtH Damage Fatigue Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.00
Description=(Float) Base fatigue damage | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.05
VarName=fHandFatigueDamageBase
type=slider
value=1.00
MinValue=-20
MaxValue=20

[HtH Damage Fatigue Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.50
Description=(Float)Fatigue damage multiplier | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.05
VarName=fHandFatigueDamageMult
type=slider
value=0.50
MinValue=-20
MaxValue=20

[HtH Maximum Damage]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=15.0
Description=(Float) Base maximum unarmed damage (note: actual maximum damage may be higher or lower depending of the other hand-to-hand settings.) | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.5
VarName=fHandHealthMax
type=slider
value=15.0
MinValue=-20
MaxValue=20

[HtH Minimum Damage]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.0
Description=(Float) Base Minimum unarmed damage | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.5
VarName=fHandHealthMin
type=slider
value=1.0
MinValue=-20
MaxValue=20

[HtH Reach Mult]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.6
Description=(Float) Unarmed reach (note: the default hand-to-hand reach is about 5 feet or 105 units) | Formula: fHandHealthMin + (fHandHealthMax - fHandHealthMin) × (Strength / 100 × fHandDamageStrengthMult + fHandDamageStrengthBase) × (HandToHand / 100 × fHandDamageSkillMult + fHandDamageSkillBase)
LoadOnBoot=IfChanged
Step=0.1
VarName=fHandReachMult
type=slider
value=0.6
MinValue=-20
MaxValue=20

[Knockback Settings]
description=Settings that affect knockback.
type=header

[Knockback Agility Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.00
Description=(Float) When hitting an opponent the victim get's pushed backwards. The speed at which the victim is pushed back is modified by the victim's agility and the damage of the attack. The agility dependency is controlled by fKnockbackAgilBase and FKnockbackAgilMult. The speed at which the victim is pushed backwards decreases towards the end. The pushback does not seem to be applied if the victim get's staggered.
LoadOnBoot=IfChanged
Step=0.1
VarName=fKnockbackAgilBase
type=slider
value=1.00
MinValue=-20
MaxValue=20

[Knockback Agility Mult]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=-0.008
Description=(Float) When hitting an opponent the victim get's pushed backwards. The speed at which the victim is pushed back is modified by the victim's agility and the damage of the attack. The agility dependency is controlled by fKnockbackAgilBase and FKnockbackAgilMult. The speed at which the victim is pushed backwards decreases towards the end. The pushback does not seem to be applied if the victim get's staggered.
LoadOnBoot=IfChanged
Step=0.001
VarName=fKnockbackAgilBase
type=slider
value=-0.008
MinValue=-20
MaxValue=20

[Knockback Damage Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=50
Description=(Float) When hitting an opponent the victim get's pushed backwards. The speed at which the victim is pushed back is modified by the victim's agility and the damage of the attack. The damage dependency is controlled by FKnockbackDamageBase and FKnockbackDamageMult. The speed at which the victim is pushed backwards decreases towards the end. The pushback does not seem to be applied if the victim get's staggered.
LoadOnBoot=IfChanged
Step=1
VarName=fKnockbackDamageBase
type=slider
value=50
MinValue=-200
MaxValue=200

[Knockback Damage Mult]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=10
Description=(Float) When hitting an opponent the victim get's pushed backwards. The speed at which the victim is pushed back is modified by the victim's agility and the damage of the attack. The damage dependency is controlled by FKnockbackDamageBase and FKnockbackDamageMult. The speed at which the victim is pushed backwards decreases towards the end. The pushback does not seem to be applied if the victim get's staggered.
LoadOnBoot=IfChanged
Step=1
VarName=fKnockbackDamageMult
type=slider
value=10
MinValue=-200
MaxValue=200

[Knockback Force Max]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=512.00
Description=(Float) The upper cap on how fast the victim can be pushed back. This is likely the same for any kind of power attack, but with the higher damage of the power attack, the pushback effect is also stronger. The pushback effect is not applied if the victim gets staggered by the attack.
LoadOnBoot=IfChanged
Step=1
VarName=fKnockbackForceMax
type=slider
value=512.0
MinValue=0
MaxValue=5120

[Knockback Time]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.0
Description=(Float) When hitting an opponent the victim get's pushed backwards. This setting sets the duration in seconds for which this movement happens.
LoadOnBoot=IfChanged
Step=0.1
VarName=fKnockbackTime
type=slider
value=1.0
MinValue=0
MaxValue=120

[Knockdown Chance]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.3
Description=(Float) "Knockdown" refers to what is more commonly known as "staggering". This determines the base fraction of all attacks which will stagger their target. For example with the default value of 0.3, 3 out of 10 attacks will stagger their target on average. The chance to stagger the target is further modified by the damage of the attack and the agility of the victim.
LoadOnBoot=IfChanged
Step=0.1
VarName=fKnockdownChance
type=slider
value=0.3
MinValue=0
MaxValue=1

[Block Settings]
description=Settings that affect Blocking.
type=header

[Block Maximum]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.75
Description=(Float) Limits the maximum effectiveness of the block skill. In simple terms, a value of 0.75 means that a block skill of 100 would reduce damage by 75% when blocking with a shield. A value of 1.0 combined with a block skill of 100 means that you block all damage when using a shield. The actual percentage effectiveness of the block skill is derived from some formula involving fBlockSkillBase, fBlockSkillMult, fBlockMax and, when using a weapon or your hands, fBlockAmountWeaponMult, and fBlockAmountHandToHandMult.
LoadOnBoot=IfChanged
Step=0.05
VarName=fBlockMax
type=slider
value=0.75
MinValue=0
MaxValue=1

[Block Skill Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.0
Description=(Float) Determines the percent of damage that is disregard when an attack is blocked from block level 0. A value of 1.0 means 100%. This percentage is added to the total amount of block percentage, so with fblockmax at 1.0, a block skill of 75 and this setting at 0.25 100% of the damage will be blocked. Note that the total damage that is blocked is capped by fBlockMax. The damage blocked by hand to hand or just a weapon is also determent by fBlockAmountHandToHandMult and fBlockAmountWeaponMult respectively and by fBlockScoreNoShieldMult.
LoadOnBoot=IfChanged
Step=0.05
VarName=fBlockSkillBase
type=slider
value=0.0
MinValue=0
MaxValue=1

[Block Skill Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.0
Description=(Float) Determines the amount that is added to fBlockSkillBase for every increased level in block. At the default settings the percentage of damage blocked with a shield and without armor value is equal to the block level of the actor. Though it is by default capped at 75.
LoadOnBoot=IfChanged
Step=0.05
VarName=fBlockSkillMult
type=slider
value=1.0
MinValue=0
MaxValue=100

[Block Hand-to-Hand Amount]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.2500
Description=(Float) The amount of damage you block when fighting hand-to-hand is governed by your block skill and this setting. This setting reduces the amount of damage blocked when you block with your hand rather than a shield. In other words, a value of 1.0 means that your hand blocks as much damage as a shield, whereas a value of 0.5 means that your hand only blocks half the damage of a shield. Note: the effectiveness of hand-to-hand for blocking is also reduced by FBlockScoreNoShieldMult.
LoadOnBoot=IfChanged
Step=0.05
VarName=fBlockAmountHandToHandMult
type=slider
value=0.25
MinValue=0
MaxValue=1

[Block Weapon Amount]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.50
Description=(Float) The amount of damage you block with a weapon is governed by your block skill and this setting. This setting reduces the amount of damage blocked when you block with a weapon rather than a shield. In other words, a value of 1.0 means that your weapon blocks as much damage as a shield, whereas a value of 0.5 means that your weapon only blocks half the damage of a shield.
LoadOnBoot=IfChanged
Step=0.05
VarName=fBlockAmountWeaponMult
type=slider
value=0.50
MinValue=0
MaxValue=1

[Armor Settings]
description=Settings that affect Armor.
type=header

[Maximum Armor Rating]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=85.0
Description=(Float) Determines the maximum amount of armor. This decimal value is used to determine the maximum armor contribution of all equipped items and effects. The default is 85.00. Since armor rating is the percentage of damage withheld from the target, the best that any combination of armor can do is remove 85% of damage done. It would be potentially dangerous to let this value get too close to 100. | Fractional values are retained at all times. An actor's health is a floating point value, as are the weapon damage and armor rating. All calculations are made as floats. Every piece of armor contributes it's armor value directly to this value. Every % of shield and fire/shock/frost shield also adds 1 armor. A value of 0 removes the cap entirely (no limit to armor rating).
LoadOnBoot=IfChanged
Step=0.5
VarName=fMaxArmorRating
type=slider
value=85.0
MinValue=0
MaxValue=100

[Armor Rating Condition Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.0
Description=(Float) The current (percentage) condition of a piece of armor is multiplied by fArmorRatingConditionMult and added to this. The result is multiplied by the base armor rating of the piece.
LoadOnBoot=IfChanged
Step=0.1
VarName=fArmorRatingConditionBase
type=slider
value=0.0
MinValue=0
MaxValue=100

[Armor Rating Condition Multiplier]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.0
Description=(Float) The current (percentage) condition of a piece of armor is multiplied by this and added to fArmorRatingConditionBase. The result is multiplied by the base armor rating of the piece.
LoadOnBoot=IfChanged
Step=0.1
VarName=fArmorRatingConditionMult
type=slider
value=1.0
MinValue=0
MaxValue=100

[Armor Rating Base]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.0
Description=(Float) This is a multiplier used to scale the armor rating of armor by skill. A skill of 100 Multiplies the armor rating by 1.0. The fArmorRatingBase value sets the lower threshold for skills of 0. The actual value is interpolated between the two. For example, a skill of 50 is 50% of the way between the min and max, which turns out to be 67.5%.
LoadOnBoot=IfChanged
Step=0.0
VarName=fArmorRatingBase
type=slider
value=0.0
MinValue=0
MaxValue=100

[Armor Rating Maximum]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.0
Description=(Float) This is a multiplier used to scale the armor rating of armor by skill. A skill of 100 Multiplies the armor rating by 1.0. The fArmorRatingBase value sets the lower threshold for skills of 0. The actual value is interpolated between the two. For example, a skill of 50 is 50% of the way between the min and max, which turns out to be 67.5%.
LoadOnBoot=IfChanged
Step=1.0
VarName=fArmorRatingMax
type=slider
value=1.0
MinValue=0
MaxValue=100

[Combat Speech Settings]
description=Settings that affect Combat Speech.
type=header

[Speak Attack Chance]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.080
Description=(Float) The percentage chance that an NPC will utter one of the voices defined on the Combat->Attack tab of the Generic quest while engaged in combat. These voices are used only by NPCs, not by the player. Seems to relate only to the chance of speaking after combat has started. An NPC will always choose one of these voices when combat is initiated.
LoadOnBoot=IfChanged
Step=0.001
VarName=fCombatSpeakAttackChance
type=slider
value=0.080
MinValue=0
MaxValue=1

[Speak Hit Chance]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.2000
Description=(Float) The percentage chance that an NPC will utter one of the voices defined under the Combat->Hit tab of the Generic quest when hit with a melee or marksman weapon in combat. NPCs will always use one of these voices when they are killed, regardless of this setting. They are not used when the actor is damaged by a spell, unless the spell kills them. Note that the player uses these voices as well. Setting this to 1.0 causes every hit to trigger a voice, as long as the damage done exceeds the value defined in fCombatHitSpeakThreshold. This can be useful for detecting hits against NPCs or the player.
LoadOnBoot=IfChanged
Step=0.001
VarName=fCombatSpeakHitChance
type=slider
value=0.2000
MinValue=0
MaxValue=1

[Speak Hit Threshold]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=0.1000
Description=(Float) Controls the damage (as a percentage of an NPC's total HP) necessary to trigger a combat speech when an NPC is hit by an attack. Setting it to 1.0000 means that NPCs never speak when struck unless the hit kills them. Setting it to a lower value means they can speak when struck by weaker attacks.
LoadOnBoot=IfChanged
Step=0.001
VarName=fCombatSpeakHitThreshold
type=slider
value=0.1000
MinValue=0
MaxValue=1

[Speak Power Attack Chance]
CommandOverride=SetGameSetting ((varname)) ((value))
DefaultValue=1.00
Description=(Float) The percentage chance that an NPC or the player will utter one of the voices defined under the Combat->Power Attack tab of the Generic quest when executing a power attack. Power Attack voices are never used while the actor is sneaking or weilding a weapon type other than Blade or Blunt.
LoadOnBoot=IfChanged
Step=0.001
VarName=fCombatSpeakPowerAttackChance
type=slider
value=1.00
MinValue=0
MaxValue=100